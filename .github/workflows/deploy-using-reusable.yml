name: Deploy Using Reusable Workflow

on:
  push:
    branches: [ main ]
    paths:
      - '**.tf'
      - '**.tfvars'
      - '.github/workflows/deploy-using-reusable.yml'
  pull_request:
    branches: [ main ]
    paths:
      - '**.tf'
      - '**.tfvars'
      - '.github/workflows/deploy-using-reusable.yml'
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action to perform'
        required: true
        default: 'plan'
        type: choice
        options:
          - plan
          - apply
          - destroy
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
          - development
          - staging
          - production

jobs:
  # Plan job for PRs
  plan:
    if: github.event_name == 'pull_request'
    uses: ./.github/workflows/reusable-terraform.yml
    with:
      action: plan
      environment: ${{ github.event.inputs.environment || 'production' }}
      working-directory: .
      auto-approve: false
    secrets:
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      TF_STATE_STORAGE_ACCOUNT: ${{ secrets.TF_STATE_STORAGE_ACCOUNT }}
      TF_STATE_CONTAINER: ${{ secrets.TF_STATE_CONTAINER }}
      TF_STATE_KEY: ${{ secrets.TF_STATE_KEY }}

  # Apply job for main branch pushes
  apply:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    uses: ./.github/workflows/reusable-terraform.yml
    with:
      action: apply
      environment: ${{ github.event.inputs.environment || 'production' }}
      working-directory: .
      auto-approve: true
    secrets:
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      TF_STATE_STORAGE_ACCOUNT: ${{ secrets.TF_STATE_STORAGE_ACCOUNT }}
      TF_STATE_CONTAINER: ${{ secrets.TF_STATE_CONTAINER }}
      TF_STATE_KEY: ${{ secrets.TF_STATE_KEY }}

  # Manual workflow dispatch
  manual:
    if: github.event_name == 'workflow_dispatch'
    uses: ./.github/workflows/reusable-terraform.yml
    with:
      action: ${{ github.event.inputs.action }}
      environment: ${{ github.event.inputs.environment }}
      working-directory: .
      auto-approve: ${{ github.event.inputs.action == 'destroy' }}
    secrets:
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      TF_STATE_STORAGE_ACCOUNT: ${{ secrets.TF_STATE_STORAGE_ACCOUNT }}
      TF_STATE_CONTAINER: ${{ secrets.TF_STATE_CONTAINER }}
      TF_STATE_KEY: ${{ secrets.TF_STATE_KEY }}