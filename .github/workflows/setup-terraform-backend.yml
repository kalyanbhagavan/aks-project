name: Setup Terraform Backend

on:
  workflow_dispatch:
    inputs:
      resource_group_name:
        description: 'Resource group name for Terraform state'
        required: true
        default: 'terraform-state-rg'
      location:
        description: 'Azure region for Terraform state'
        required: true
        default: 'eastus'
      storage_account_name:
        description: 'Storage account name for Terraform state'
        required: true
        default: 'tfstate'
      container_name:
        description: 'Container name for Terraform state'
        required: true
        default: 'tfstate'

env:
  TF_VERSION: "1.7.0"

jobs:
  setup-backend:
    name: 'Setup Terraform Backend'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create Resource Group
        run: |
          az group create \
            --name ${{ github.event.inputs.resource_group_name }} \
            --location ${{ github.event.inputs.location }} \
            --output table

      - name: Create Storage Account
        run: |
          az storage account create \
            --name ${{ github.event.inputs.storage_account_name }} \
            --resource-group ${{ github.event.inputs.resource_group_name }} \
            --location ${{ github.event.inputs.location }} \
            --sku Standard_LRS \
            --encryption-services blob \
            --output table

      - name: Create Blob Container
        run: |
          az storage container create \
            --name ${{ github.event.inputs.container_name }} \
            --account-name ${{ github.event.inputs.storage_account_name }} \
            --output table

      - name: Get Storage Account Key
        id: get-key
        run: |
          STORAGE_KEY=$(az storage account keys list \
            --resource-group ${{ github.event.inputs.resource_group_name }} \
            --account-name ${{ github.event.inputs.storage_account_name }} \
            --query '[0].value' \
            --output tsv)
          echo "storage_key=$STORAGE_KEY" >> $GITHUB_OUTPUT

      - name: Output Backend Configuration
        run: |
          echo "## Terraform Backend Configuration" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Required GitHub Secrets:" >> $GITHUB_STEP_SUMMARY
          echo "- **TF_STATE_STORAGE_ACCOUNT**: ${{ github.event.inputs.storage_account_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **TF_STATE_CONTAINER**: ${{ github.event.inputs.container_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **TF_STATE_KEY**: ${{ steps.get-key.outputs.storage_key }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Backend Configuration:" >> $GITHUB_STEP_SUMMARY
          echo '```hcl' >> $GITHUB_STEP_SUMMARY
          echo 'terraform {' >> $GITHUB_STEP_SUMMARY
          echo '  backend "azurerm" {' >> $GITHUB_STEP_SUMMARY
          echo '    resource_group_name  = "${{ github.event.inputs.resource_group_name }}"' >> $GITHUB_STEP_SUMMARY
          echo '    storage_account_name = "${{ github.event.inputs.storage_account_name }}"' >> $GITHUB_STEP_SUMMARY
          echo '    container_name       = "${{ github.event.inputs.container_name }}"' >> $GITHUB_STEP_SUMMARY
          echo '    key                  = "terraform.tfstate"' >> $GITHUB_STEP_SUMMARY
          echo '  }' >> $GITHUB_STEP_SUMMARY
          echo '}' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

      - name: Enable Versioning
        run: |
          az storage account blob-service-properties update \
            --resource-group ${{ github.event.inputs.resource_group_name }} \
            --account-name ${{ github.event.inputs.storage_account_name }} \
            --enable-versioning true

      - name: Enable Soft Delete
        run: |
          az storage account blob-service-properties update \
            --resource-group ${{ github.event.inputs.resource_group_name }} \
            --account-name ${{ github.event.inputs.storage_account_name }} \
            --enable-delete-retention true \
            --delete-retention-days 7