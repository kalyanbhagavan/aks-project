name: Deploy App to Private AKS

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'k8s/**'
      - '.github/workflows/deploy-app-to-aks.yml'
      - 'scripts/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'k8s/**'
      - '.github/workflows/deploy-app-to-aks.yml'
      - 'scripts/**'
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy via Jumpbox
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Azure CLI
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Validate Required Secrets
        run: |
          if [[ -z "${{ secrets.JUMPBOX_IP }}" ]]; then
            echo "‚ùå Error: JUMPBOX_IP secret is required"
            exit 1
          fi
          if [[ -z "${{ secrets.JUMPBOX_PASSWORD }}" ]]; then
            echo "‚ùå Error: JUMPBOX_PASSWORD secret is required"
            exit 1
          fi
          if [[ -z "${{ secrets.ACR_NAME }}" ]]; then
            echo "‚ùå Error: ACR_NAME secret is required"
            exit 1
          fi
          if [[ -z "${{ secrets.ACR_USER }}" ]]; then
            echo "‚ùå Error: ACR_USER secret is required"
            exit 1
          fi
          if [[ -z "${{ secrets.ACR_PASSWORD }}" ]]; then
            echo "‚ùå Error: ACR_PASSWORD secret is required"
            exit 1
          fi
          if [[ -z "${{ secrets.RESOURCE_GROUP_NAME }}" ]]; then
            echo "‚ùå Error: RESOURCE_GROUP_NAME secret is required"
            exit 1
          fi
          if [[ -z "${{ secrets.AKS_CLUSTER_NAME }}" ]]; then
            echo "‚ùå Error: AKS_CLUSTER_NAME secret is required"
            exit 1
          fi
          echo "‚úÖ All required secrets are present"


      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: Copy Files to Jumpbox
        run: |
          echo "Copying Kubernetes manifests and scripts to jumpbox..."
          sshpass -p "${{ secrets.JUMPBOX_PASSWORD }}" scp -o StrictHostKeyChecking=no -r ./k8s ./scripts azureuser@${{ secrets.JUMPBOX_IP }}:~/

      - name: Run Setup and Deploy Script on Jumpbox
        run: |
          echo "Executing setup-and-deploy.sh remotely..."
          sshpass -p "${{ secrets.JUMPBOX_PASSWORD }}" ssh -o StrictHostKeyChecking=no azureuser@${{ secrets.JUMPBOX_IP }} << 'EOF'
            cd ~/scripts
            chmod +x setup-and-deploy.sh
            ./setup-and-deploy.sh
          EOF

      - name: Get App URL from Jumpbox
        id: app-url
        run: |
          echo "Fetching external IP from jumpbox..."
          EXTERNAL_IP=$(sshpass -p "${{ secrets.JUMPBOX_PASSWORD }}" ssh -o StrictHostKeyChecking=no azureuser@${{ secrets.JUMPBOX_IP }} \
            "cat /tmp/external_ip.txt 2>/dev/null || echo 'IP not available'")
          echo "app_url=http://$EXTERNAL_IP" >> $GITHUB_OUTPUT
          echo "‚úÖ App URL: http://$EXTERNAL_IP"

      - name: Deployment Summary
        run: |
          echo "## üéâ Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**App URL:** ${{ steps.app-url.outputs.app_url }}" >> $GITHUB_STEP_SUMMARY
          echo "- AKS Cluster: ${{ secrets.AKS_CLUSTER_NAME }}" >> $GITHUB_STEP_SUMMARY
          echo "- ACR: ${{ secrets.ACR_NAME }}" >> $GITHUB_STEP_SUMMARY
          echo "- Resource Group: ${{ secrets.RESOURCE_GROUP_NAME }}" >> $GITHUB_STEP_SUMMARY
          echo "- Jumpbox IP: ${{ secrets.JUMPBOX_IP }}" >> $GITHUB_STEP_SUMMARY
          echo "- Deployment: Executed fully from jumpbox (Docker + kubectl)" >> $GITHUB_STEP_SUMMARY
